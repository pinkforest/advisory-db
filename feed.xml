<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>RustSec Advisories</title><id>https://rustsec.org/feed.xml</id><updated>2022-10-24T00:00:00+00:00</updated><author><name>RustSec</name></author><icon>https://rustsec.org/favicon.ico</icon><link href="https://rustsec.org/feed.xml" rel="self" type="application/atom+xml"/><link href="https://rustsec.org/" rel="alternate" type="text/html"/><subtitle xml:lang="en">Security advisories filed against Rust crates</subtitle><entry><title>RUSTSEC-2022-0062: Vulnerability in matrix-sdk</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0062.html</id><updated>2022-10-24T00:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2022-0062.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0062: Vulnerability in matrix-sdk"/><published>2022-10-24T00:00:00+00:00</published><summary xml:lang="en">matrix-sdk 0.6.0 logs access tokens</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/matrix-sdk/RUSTSEC-2022-0062.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/matrix-sdk/RUSTSEC-2022-0062.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0062
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;matrix-sdk 0.6.0 logs access tokens&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-10-24&quot;&gt;
          October 24, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/matrix-sdk.html&quot;&gt;matrix-sdk&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/matrix-sdk&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/matrix-org/matrix-rust-sdk/issues/1110&quot;&gt;
          https://github.com/matrix-org/matrix-rust-sdk/issues/1110
        &lt;/a&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.6.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.6.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;When sending Matrix requests using an affected version of &lt;code&gt;matrix-sdk&lt;/code&gt; in an application that
writes logs using &lt;code&gt;tracing-subscriber&lt;/code&gt; (in a way that includes fields of tracing spans such as
&lt;code&gt;tracing_subscriber&lt;/code&gt;s default text output from the &lt;code&gt;fmt&lt;/code&gt; module), these logs will contain the
user&apos;s access token.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2022-0060: orbtk is unmaintained</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0060.html</id><updated>2022-10-13T00:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2022-0060.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0060: orbtk is unmaintained"/><published>2022-10-13T00:00:00+00:00</published><summary xml:lang="en">orbtk is Unmaintained</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/orbtk/RUSTSEC-2022-0060.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/orbtk/RUSTSEC-2022-0060.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0060
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;orbtk is Unmaintained&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-10-13&quot;&gt;
          October 13, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/orbtk.html&quot;&gt;orbtk&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/orbtk&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unmaintained
        
      &lt;/dd&gt;

      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/redox-os/orbtk/blob/eba9e77821551076bbf1d9f7ab44d788150e3446/README.md#orbtk-is-sunsetting&quot;&gt;
          https://github.com/redox-os/orbtk/blob/eba9e77821551076bbf1d9f7ab44d788150e3446/README.md#orbtk-is-sunsetting
        &lt;/a&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;The &lt;code&gt;orbtk&lt;/code&gt; crate is no longer maintained.&lt;/p&gt;
&lt;p&gt;Alternatives proposed by the authors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://crates.io/crates/iced&quot;&gt;&lt;code&gt;iced&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://crates.io/crates/slint&quot;&gt;&lt;code&gt;slint&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2022-0059: Vulnerability in openssl-src</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0059.html</id><updated>2022-10-11T00:00:00+00:00</updated><category term="crypto-failure"/><link href="https://rustsec.org/advisories/RUSTSEC-2022-0059.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0059: Vulnerability in openssl-src"/><published>2022-10-11T00:00:00+00:00</published><summary xml:lang="en">Using a Custom Cipher with `NID_undef` may lead to NULL encryption</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/openssl-src/RUSTSEC-2022-0059.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/openssl-src/RUSTSEC-2022-0059.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0059
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Using a Custom Cipher with &lt;code&gt;NID_undef&lt;/code&gt; may lead to NULL encryption&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-10-11&quot;&gt;
          October 11, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/openssl-src.html&quot;&gt;openssl-src&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/openssl-src&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/crypto-failure.html&quot;&gt;crypto-failure&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-3358&quot;&gt;CVE-2022-3358&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://www.openssl.org/news/secadv/20221011.txt&quot;&gt;
          https://www.openssl.org/news/secadv/20221011.txt
        &lt;/a&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=300.0.10&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;300.0.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;OpenSSL supports creating a custom cipher via the legacy &lt;code&gt;EVP_CIPHER_meth_new()&lt;/code&gt;
function and associated function calls. This function was deprecated in OpenSSL
3.0 and application authors are instead encouraged to use the new provider
mechanism in order to implement custom ciphers.&lt;/p&gt;
&lt;p&gt;OpenSSL versions 3.0.0 to 3.0.5 incorrectly handle legacy custom ciphers passed
to the &lt;code&gt;EVP_EncryptInit_ex2()&lt;/code&gt;, &lt;code&gt;EVP_DecryptInit_ex2()&lt;/code&gt; and &lt;code&gt;EVP_CipherInit_ex2()&lt;/code&gt;
functions (as well as other similarly named encryption and decryption
initialisation functions). Instead of using the custom cipher directly it
incorrectly tries to fetch an equivalent cipher from the available providers.
An equivalent cipher is found based on the NID passed to &lt;code&gt;EVP_CIPHER_meth_new()&lt;/code&gt;.
This NID is supposed to represent the unique NID for a given cipher. However it
is possible for an application to incorrectly pass &lt;code&gt;NID_undef&lt;/code&gt; as this value in
the call to &lt;code&gt;EVP_CIPHER_meth_new()&lt;/code&gt;. When &lt;code&gt;NID_undef&lt;/code&gt; is used in this way the
OpenSSL encryption/decryption initialisation function will match the NULL cipher
as being equivalent and will fetch this from the available providers. This will
succeed if the default provider has been loaded (or if a third party provider
has been loaded that offers this cipher). Using the NULL cipher means that the
plaintext is emitted as the ciphertext.&lt;/p&gt;
&lt;p&gt;Applications are only affected by this issue if they call &lt;code&gt;EVP_CIPHER_meth_new()&lt;/code&gt;
using &lt;code&gt;NID_undef&lt;/code&gt; and subsequently use it in a call to an encryption/decryption
initialisation function. Applications that only use SSL/TLS are not impacted by
this issue.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2022-0061: parity-wasm is unmaintained</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0061.html</id><updated>2022-10-01T00:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2022-0061.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0061: parity-wasm is unmaintained"/><published>2022-10-01T00:00:00+00:00</published><summary xml:lang="en">Crate `parity-wasm` deprecated by the author</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/parity-wasm/RUSTSEC-2022-0061.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/parity-wasm/RUSTSEC-2022-0061.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0061
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Crate &lt;code&gt;parity-wasm&lt;/code&gt; deprecated by the author&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-10-01&quot;&gt;
          October  1, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/parity-wasm.html&quot;&gt;parity-wasm&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/parity-wasm&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unmaintained
        
      &lt;/dd&gt;

      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/paritytech/parity-wasm/pull/334&quot;&gt;
          https://github.com/paritytech/parity-wasm/pull/334
        &lt;/a&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/paritytech/parity-wasm/pull/334&quot;&gt;This PR&lt;/a&gt; explicitly deprecates &lt;code&gt;parity-wasm&lt;/code&gt;.
The author recommends switching to &lt;a href=&quot;https://github.com/bytecodealliance/wasm-tools&quot;&gt;wasm-tools&lt;/a&gt;.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2022-0058: Security notice about inconceivable</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0058.html</id><updated>2022-09-28T00:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2022-0058.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0058: Security notice about inconceivable"/><published>2022-09-28T00:00:00+00:00</published><summary xml:lang="en">Library exclusively intended to inject UB into safe Rust.</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/inconceivable/RUSTSEC-2022-0058.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/inconceivable/RUSTSEC-2022-0058.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0058
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Library exclusively intended to inject UB into safe Rust.&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-09-28&quot;&gt;
          September 28, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/inconceivable.html&quot;&gt;inconceivable&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/inconceivable&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Notice
        
      &lt;/dd&gt;

      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://crates.io/crates/inconceivable&quot;&gt;
          https://crates.io/crates/inconceivable
        &lt;/a&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;Quoting from the crate description:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This crate is created purely to inject undefined behavior into stable, safe rust.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Specifically, the &lt;code&gt;inconceivable!&lt;/code&gt; macro is insta-UB if the &lt;code&gt;ub_inconceivable&lt;/code&gt; feature is enabled by &lt;em&gt;any&lt;/em&gt; reverse dependency.
The value this adds is questionable, and hides &lt;code&gt;unsafe&lt;/code&gt; code from naive analysis.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2022-0063: Vulnerability in linked_list_allocator</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0063.html</id><updated>2022-09-07T00:00:00+00:00</updated><category term="memory-corruption"/><link href="https://rustsec.org/advisories/RUSTSEC-2022-0063.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0063: Vulnerability in linked_list_allocator"/><published>2022-09-07T00:00:00+00:00</published><summary xml:lang="en">Multiple vulnerabilities resulting in out-of-bounds writes</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/linked_list_allocator/RUSTSEC-2022-0063.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/linked_list_allocator/RUSTSEC-2022-0063.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0063
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Multiple vulnerabilities resulting in out-of-bounds writes&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-09-07&quot;&gt;
          September  7, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/linked_list_allocator.html&quot;&gt;linked_list_allocator&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/linked_list_allocator&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-corruption.html&quot;&gt;memory-corruption&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-36086&quot;&gt;CVE-2022-36086&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/advisories/GHSA-xg8p-34w2-j49j&quot;&gt;
          https://github.com/advisories/GHSA-xg8p-34w2-j49j
        &lt;/a&gt;
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;cvss_score&quot;&gt;CVSS Score&lt;/dt&gt;
      &lt;dd&gt;8.4 &lt;span class=&quot;tag high&quot;&gt;
        HIGH
      &lt;/span&gt;&lt;/dd&gt;

      &lt;dt id=&quot;cvss_details&quot;&gt;CVSS Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;dl&gt;
          
          &lt;dt&gt;Attack vector&lt;/dt&gt;&lt;dd&gt;Local&lt;/dd&gt;
          

          
          &lt;dt&gt;Attack complexity&lt;/dt&gt;&lt;dd&gt;Low&lt;/d&gt;
          

          
          &lt;dt&gt;Privileges required&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;User interaction&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Scope&lt;/dt&gt;&lt;dd&gt;Unchanged&lt;/dd&gt;
          

          
          &lt;dt&gt;Confidentiality&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          

          
          &lt;dt&gt;Integrity&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          

          
          &lt;dt&gt;Availability&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          
        &lt;/dl&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;cvss&quot;&gt;CVSS Vector&lt;/dt&gt;
      &lt;dd&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H&quot;&gt;CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H&lt;/a&gt;&lt;/dd&gt;

      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.10.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;ul&gt;
&lt;li&gt;The heap initialization methods were missing a minimum size check for the given heap size argument. This could lead to &lt;strong&gt;out-of-bound writes&lt;/strong&gt; when a heap was initialized with a size smaller than &lt;code&gt;3 * size_of::&amp;lt;usize&amp;gt;&lt;/code&gt; because of metadata write operations.&lt;/li&gt;
&lt;li&gt;When calling &lt;code&gt;Heap::extend&lt;/code&gt; with a size smaller than two &lt;code&gt;usize&lt;/code&gt;s (e.g., 16 on &lt;code&gt;x86_64&lt;/code&gt;), the size was erroneously rounded up to the minimum size, which could result in an &lt;strong&gt;out-of-bounds write&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Calling &lt;code&gt;Heap::extend&lt;/code&gt; on an empty heap tried to construct a heap starting at address 0, which is also an &lt;strong&gt;out-of-bounds write&lt;/strong&gt;.
&lt;ul&gt;
&lt;li&gt;One specific way to trigger this accidentally is to call &lt;code&gt;Heap::new&lt;/code&gt; (or a similar constructor) with a heap size that is smaller than two &lt;code&gt;usize&lt;/code&gt;s. This was treated as an empty heap as well.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Calling &lt;code&gt;Heap::extend&lt;/code&gt; on a heap whose size is not a multiple of the size of two &lt;code&gt;usize&lt;/code&gt;s resulted in unaligned writes. It also left the heap in an unexpected state, which might lead to subsequent issues. We did not find a way to exploit this undefined behavior yet (apart from DoS on platforms that fault on unaligned writes).&lt;/li&gt;
&lt;/ul&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2022-0055: Vulnerability in axum-core</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0055.html</id><updated>2022-08-31T00:00:00+00:00</updated><category term="denial-of-service"/><link href="https://rustsec.org/advisories/RUSTSEC-2022-0055.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0055: Vulnerability in axum-core"/><published>2022-08-31T00:00:00+00:00</published><summary xml:lang="en">No default limit put on request bodies</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/axum-core/RUSTSEC-2022-0055.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/axum-core/RUSTSEC-2022-0055.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0055
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;No default limit put on request bodies&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-08-31&quot;&gt;
          August 31, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/axum-core.html&quot;&gt;axum-core&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/axum-core&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/denial-of-service.html&quot;&gt;denial-of-service&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/ddos.html&quot;&gt;#ddos&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/oom.html&quot;&gt;#oom&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/tokio-rs/axum/pull/1346&quot;&gt;
          https://github.com/tokio-rs/axum/pull/1346
        &lt;/a&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.2.8, &amp;lt;0.3.0-rc.1&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.3.0-rc.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;&lt;code&gt;&amp;lt;bytes::Bytes as axum_core::extract::FromRequest&amp;gt;::from_request&lt;/code&gt; would not, by
default, set a limit for the size of the request body. That meant if a malicious
peer would send a very large (or infinite) body your server might run out of
memory and crash.&lt;/p&gt;
&lt;p&gt;This also applies to these extractors which used &lt;code&gt;Bytes::from_request&lt;/code&gt;
internally:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;axum::extract::Form&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;axum::extract::Json&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;String&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The fix is also in &lt;code&gt;axum-core&lt;/code&gt; &lt;code&gt;0.3.0.rc.2&lt;/code&gt; but &lt;code&gt;0.3.0.rc.1&lt;/code&gt; &lt;em&gt;is&lt;/em&gt; vulnerable.&lt;/p&gt;
&lt;p&gt;Because &lt;code&gt;axum&lt;/code&gt; depends on &lt;code&gt;axum-core&lt;/code&gt; it is vulnerable as well. The vulnerable
versions of &lt;code&gt;axum&lt;/code&gt; are &lt;code&gt;&amp;lt;= 0.5.15&lt;/code&gt; and &lt;code&gt;0.6.0.rc.1&lt;/code&gt;. &lt;code&gt;axum&lt;/code&gt; &lt;code&gt;&amp;gt;= 0.5.16&lt;/code&gt; and
&lt;code&gt;&amp;gt;= 0.6.0.rc.2&lt;/code&gt; does have the fix and are not vulnerable.&lt;/p&gt;
&lt;p&gt;The patched versions will set a 2 MB limit by default.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2022-0057: badge is unmaintained</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0057.html</id><updated>2022-08-31T00:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2022-0057.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0057: badge is unmaintained"/><published>2022-08-31T00:00:00+00:00</published><summary xml:lang="en">badge is Unmaintained</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/badge/RUSTSEC-2022-0057.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/badge/RUSTSEC-2022-0057.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0057
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;badge is Unmaintained&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-08-31&quot;&gt;
          August 31, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/badge.html&quot;&gt;badge&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/badge&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unmaintained
        
      &lt;/dd&gt;

      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/rust-lang/docs.rs/issues/1813#issuecomment-1232875809&quot;&gt;
          https://github.com/rust-lang/docs.rs/issues/1813#issuecomment-1232875809
        &lt;/a&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;The maintainer has adviced this crate is deprecated and will not receive any maintenance.&lt;/p&gt;
&lt;p&gt;The crate depends on the deprecated &lt;code&gt;rusttype&lt;/code&gt; crate and won&apos;t receive updates
anymore.&lt;/p&gt;
&lt;h2&gt;Possible Alternative(s)&lt;/h2&gt;
&lt;p&gt;The below list has not been vetted in any way and may or may not contain alternatives;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://crates.io/crates/badge-maker&quot;&gt;badge-maker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://crates.io/crates/badgeland&quot;&gt;badgeland&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://crates.io/crates/badgen&quot;&gt;badgen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://crates.io/crates/badgers&quot;&gt;badgers&lt;/a&gt; (API compatible fork of the &lt;code&gt;badge&lt;/code&gt; crate using &lt;code&gt;ab_glyph&lt;/code&gt; as a replacement for &lt;code&gt;rusttype&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://crates.io/crates/rsbadges&quot;&gt;rsbadges&lt;/a&gt; (used deprecated &lt;code&gt;rusttype&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2022-0052: Unsoundness in os_socketaddr</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0052.html</id><updated>2022-08-26T00:00:00+00:00</updated><category term="memory-corruption"/><link href="https://rustsec.org/advisories/RUSTSEC-2022-0052.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0052: Unsoundness in os_socketaddr"/><published>2022-08-26T00:00:00+00:00</published><summary xml:lang="en">`os_socketaddr` invalidly assumes the memory layout of std::net::SocketAddr</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/os_socketaddr/RUSTSEC-2022-0052.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/os_socketaddr/RUSTSEC-2022-0052.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0052
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;&lt;code&gt;os_socketaddr&lt;/code&gt; invalidly assumes the memory layout of std::net::SocketAddr&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-08-26&quot;&gt;
          August 26, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/os_socketaddr.html&quot;&gt;os_socketaddr&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/os_socketaddr&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unsound
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-corruption.html&quot;&gt;memory-corruption&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/memory.html&quot;&gt;#memory&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/layout.html&quot;&gt;#layout&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/cast.html&quot;&gt;#cast&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/a-ba/os_socketaddr/issues/3&quot;&gt;
          https://github.com/a-ba/os_socketaddr/issues/3
        &lt;/a&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.2.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;The &lt;a href=&quot;https://crates.io/crates/os_socketaddr&quot;&gt;&lt;code&gt;os_socketaddr&lt;/code&gt;&lt;/a&gt; crate has assumed
&lt;code&gt;std::net::SocketAddrV4&lt;/code&gt; and &lt;code&gt;std::net::SocketAddrV6&lt;/code&gt; have the same memory layout as the system C
representation &lt;code&gt;sockaddr&lt;/code&gt;. It has simply casted the pointers to convert the socket addresses to the
system representation.&lt;/p&gt;
&lt;p&gt;These layout were &lt;a href=&quot;https://github.com/rust-lang/rust/pull/78802&quot;&gt;changed into idiomatic rust types&lt;/a&gt;
in nightly &lt;code&gt;std&lt;/code&gt;. Starting from rustc 1.64 the affected versions of this crate will have undefined
behaviour.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2022-0051: Vulnerability in lz4-sys</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0051.html</id><updated>2022-08-25T00:00:00+00:00</updated><category term="memory-corruption"/><link href="https://rustsec.org/advisories/RUSTSEC-2022-0051.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0051: Vulnerability in lz4-sys"/><published>2022-08-25T00:00:00+00:00</published><summary xml:lang="en">Memory corruption in liblz4</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/lz4-sys/RUSTSEC-2022-0051.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/lz4-sys/RUSTSEC-2022-0051.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0051
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Memory corruption in liblz4&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-08-25&quot;&gt;
          August 25, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/lz4-sys.html&quot;&gt;lz4-sys&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/lz4-sys&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-corruption.html&quot;&gt;memory-corruption&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/integer-overflow.html&quot;&gt;#integer-overflow&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/out-of-bounds.html&quot;&gt;#out-of-bounds&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/lz4/lz4/pull/972&quot;&gt;
          https://github.com/lz4/lz4/pull/972
        &lt;/a&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;related&quot;&gt;Related&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3520&quot;&gt;CVE-2021-3520&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;cvss_score&quot;&gt;CVSS Score&lt;/dt&gt;
      &lt;dd&gt;9.8 &lt;span class=&quot;tag critical&quot;&gt;
        CRITICAL
      &lt;/span&gt;&lt;/dd&gt;

      &lt;dt id=&quot;cvss_details&quot;&gt;CVSS Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;dl&gt;
          
          &lt;dt&gt;Attack vector&lt;/dt&gt;&lt;dd&gt;Network&lt;/dd&gt;
          

          
          &lt;dt&gt;Attack complexity&lt;/dt&gt;&lt;dd&gt;Low&lt;/d&gt;
          

          
          &lt;dt&gt;Privileges required&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;User interaction&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Scope&lt;/dt&gt;&lt;dd&gt;Unchanged&lt;/dd&gt;
          

          
          &lt;dt&gt;Confidentiality&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          

          
          &lt;dt&gt;Integrity&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          

          
          &lt;dt&gt;Availability&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          
        &lt;/dl&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;cvss&quot;&gt;CVSS Vector&lt;/dt&gt;
      &lt;dd&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H&quot;&gt;CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H&lt;/a&gt;&lt;/dd&gt;

      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=1.9.4&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;lz4-sys up to v1.9.3 bundles a version of liblz4 that is vulnerable to
&lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2021-3520&quot;&gt;CVE-2021-3520&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Attackers could craft a payload that triggers an integer overflow upon
decompression, causing an out-of-bounds write.&lt;/p&gt;
&lt;p&gt;The flaw has been corrected in version v1.9.4 of liblz4, which is included
in lz4-sys 1.9.4.&lt;/p&gt;

  &lt;/article&gt;</content></entry></feed>
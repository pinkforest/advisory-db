<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>RustSec Advisories</title><id>https://rustsec.org/feed.xml</id><updated>2022-08-31T00:00:00+00:00</updated><author><name>RustSec</name></author><icon>https://rustsec.org/favicon.ico</icon><link href="https://rustsec.org/feed.xml" rel="self" type="application/atom+xml"/><link href="https://rustsec.org/" rel="alternate" type="text/html"/><subtitle xml:lang="en">Security advisories filed against Rust crates</subtitle><entry><title>RUSTSEC-2022-0055: Vulnerability in axum-core</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0055.html</id><updated>2022-08-31T00:00:00+00:00</updated><category term="denial-of-service"/><link href="https://rustsec.org/advisories/RUSTSEC-2022-0055.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0055: Vulnerability in axum-core"/><published>2022-08-31T00:00:00+00:00</published><summary xml:lang="en">No default limit put on request bodies</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/axum-core/RUSTSEC-2022-0055.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/axum-core/RUSTSEC-2022-0055.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0055
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;No default limit put on request bodies&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-08-31&quot;&gt;
          August 31, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/axum-core.html&quot;&gt;axum-core&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/axum-core&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/denial-of-service.html&quot;&gt;denial-of-service&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/ddos.html&quot;&gt;#ddos&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/oom.html&quot;&gt;#oom&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/tokio-rs/axum/pull/1346&quot;&gt;
          https://github.com/tokio-rs/axum/pull/1346
        &lt;/a&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.2.8, &amp;lt;0.3.0-rc.1&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.3.0-rc.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;&lt;code&gt;&amp;lt;bytes::Bytes as axum_core::extract::FromRequest&amp;gt;::from_request&lt;/code&gt; would not, by
default, set a limit for the size of the request body. That meant if a malicious
peer would send a very large (or infinite) body your server might run out of
memory and crash.&lt;/p&gt;
&lt;p&gt;This also applies to these extractors which used &lt;code&gt;Bytes::from_request&lt;/code&gt;
internally:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;axum::extract::Form&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;axum::extract::Json&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;String&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The fix is also in &lt;code&gt;axum-core&lt;/code&gt; &lt;code&gt;0.3.0.rc.2&lt;/code&gt; but &lt;code&gt;0.3.0.rc.1&lt;/code&gt; &lt;em&gt;is&lt;/em&gt; vulnerable.&lt;/p&gt;
&lt;p&gt;Because &lt;code&gt;axum&lt;/code&gt; depends on &lt;code&gt;axum-core&lt;/code&gt; it is vulnerable as well. The vulnerable
versions of &lt;code&gt;axum&lt;/code&gt; are &lt;code&gt;&amp;lt;= 0.5.15&lt;/code&gt; and &lt;code&gt;0.6.0.rc.1&lt;/code&gt;. &lt;code&gt;axum&lt;/code&gt; &lt;code&gt;&amp;gt;= 0.5.16&lt;/code&gt; and
&lt;code&gt;&amp;gt;= 0.6.0.rc.2&lt;/code&gt; does have the fix and are not vulnerable.&lt;/p&gt;
&lt;p&gt;The patched versions will set a 2 MB limit by default.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2022-0052: Unsoundness in os_socketaddr</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0052.html</id><updated>2022-08-26T00:00:00+00:00</updated><category term="memory-corruption"/><link href="https://rustsec.org/advisories/RUSTSEC-2022-0052.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0052: Unsoundness in os_socketaddr"/><published>2022-08-26T00:00:00+00:00</published><summary xml:lang="en">`os_socketaddr` invalidly assumes the memory layout of std::net::SocketAddr</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/os_socketaddr/RUSTSEC-2022-0052.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/os_socketaddr/RUSTSEC-2022-0052.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0052
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;&lt;code&gt;os_socketaddr&lt;/code&gt; invalidly assumes the memory layout of std::net::SocketAddr&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-08-26&quot;&gt;
          August 26, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/os_socketaddr.html&quot;&gt;os_socketaddr&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/os_socketaddr&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unsound
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-corruption.html&quot;&gt;memory-corruption&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/memory.html&quot;&gt;#memory&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/layout.html&quot;&gt;#layout&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/cast.html&quot;&gt;#cast&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/a-ba/os_socketaddr/issues/3&quot;&gt;
          https://github.com/a-ba/os_socketaddr/issues/3
        &lt;/a&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.2.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;The &lt;a href=&quot;https://crates.io/crates/os_socketaddr&quot;&gt;&lt;code&gt;os_socketaddr&lt;/code&gt;&lt;/a&gt; crate has assumed
&lt;code&gt;std::net::SocketAddrV4&lt;/code&gt; and &lt;code&gt;std::net::SocketAddrV6&lt;/code&gt; have the same memory layout as the system C
representation &lt;code&gt;sockaddr&lt;/code&gt;. It has simply casted the pointers to convert the socket addresses to the
system representation.&lt;/p&gt;
&lt;p&gt;These layout were &lt;a href=&quot;https://github.com/rust-lang/rust/pull/78802&quot;&gt;changed into idiomatic rust types&lt;/a&gt;
in nightly &lt;code&gt;std&lt;/code&gt;. Starting from rustc 1.64 the affected versions of this crate will have undefined
behaviour.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2022-0051: Vulnerability in lz4-sys</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0051.html</id><updated>2022-08-25T00:00:00+00:00</updated><category term="memory-corruption"/><link href="https://rustsec.org/advisories/RUSTSEC-2022-0051.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0051: Vulnerability in lz4-sys"/><published>2022-08-25T00:00:00+00:00</published><summary xml:lang="en">Memory corruption in liblz4</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/lz4-sys/RUSTSEC-2022-0051.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/lz4-sys/RUSTSEC-2022-0051.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0051
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Memory corruption in liblz4&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-08-25&quot;&gt;
          August 25, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/lz4-sys.html&quot;&gt;lz4-sys&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/lz4-sys&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-corruption.html&quot;&gt;memory-corruption&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/integer-overflow.html&quot;&gt;#integer-overflow&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/out-of-bounds.html&quot;&gt;#out-of-bounds&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/lz4/lz4/pull/972&quot;&gt;
          https://github.com/lz4/lz4/pull/972
        &lt;/a&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;related&quot;&gt;Related&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-3520&quot;&gt;CVE-2021-3520&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;cvss_score&quot;&gt;CVSS Score&lt;/dt&gt;
      &lt;dd&gt;9.8 &lt;span class=&quot;tag critical&quot;&gt;
        CRITICAL
      &lt;/span&gt;&lt;/dd&gt;

      &lt;dt id=&quot;cvss_details&quot;&gt;CVSS Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;dl&gt;
          
          &lt;dt&gt;Attack vector&lt;/dt&gt;&lt;dd&gt;Network&lt;/dd&gt;
          

          
          &lt;dt&gt;Attack complexity&lt;/dt&gt;&lt;dd&gt;Low&lt;/d&gt;
          

          
          &lt;dt&gt;Privileges required&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;User interaction&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Scope&lt;/dt&gt;&lt;dd&gt;Unchanged&lt;/dd&gt;
          

          
          &lt;dt&gt;Confidentiality&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          

          
          &lt;dt&gt;Integrity&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          

          
          &lt;dt&gt;Availability&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          
        &lt;/dl&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;cvss&quot;&gt;CVSS Vector&lt;/dt&gt;
      &lt;dd&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H&quot;&gt;CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H&lt;/a&gt;&lt;/dd&gt;

      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=1.9.4&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;lz4-sys up to v1.9.3 bundles a version of liblz4 that is vulnerable to
&lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2021-3520&quot;&gt;CVE-2021-3520&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Attackers could craft a payload that triggers an integer overflow upon
decompression, causing an out-of-bounds write.&lt;/p&gt;
&lt;p&gt;The flaw has been corrected in version v1.9.4 of liblz4, which is included
in lz4-sys 1.9.4.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2022-0053: mapr is unmaintained</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0053.html</id><updated>2022-08-24T00:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2022-0053.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0053: mapr is unmaintained"/><published>2022-08-24T00:00:00+00:00</published><summary xml:lang="en">mapr is Unmaintained</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/mapr/RUSTSEC-2022-0053.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/mapr/RUSTSEC-2022-0053.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0053
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;mapr is Unmaintained&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-08-24&quot;&gt;
          August 24, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/mapr.html&quot;&gt;mapr&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/mapr&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unmaintained
        
      &lt;/dd&gt;

      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/rustsec/advisory-db/pull/1381&quot;&gt;
          https://github.com/rustsec/advisory-db/pull/1381
        &lt;/a&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;The &lt;code&gt;mapr&lt;/code&gt; fork has been merged back into upstream fork &lt;code&gt;memmap2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The maintainer(s) have adviced &lt;code&gt;mapr&lt;/code&gt; is deprecated and will not
receive any maintenance in favor of using &lt;code&gt;memmap2&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Possible Alternative(s)&lt;/h2&gt;
&lt;p&gt;The below list has not been vetted in any way and may or may not contain alternatives;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/RazrFalcon/memmap2-rs&quot;&gt;&lt;code&gt;memmap2&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2022-0049: Unsoundness in iana-time-zone</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0049.html</id><updated>2022-08-15T00:00:00+00:00</updated><category term="memory-exposure"/><link href="https://rustsec.org/advisories/RUSTSEC-2022-0049.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0049: Unsoundness in iana-time-zone"/><published>2022-08-15T00:00:00+00:00</published><summary xml:lang="en">Use after free in MacOS / iOS implementation</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/iana-time-zone/RUSTSEC-2022-0049.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/iana-time-zone/RUSTSEC-2022-0049.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0049
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Use after free in MacOS / iOS implementation&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-08-15&quot;&gt;
          August 15, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/iana-time-zone.html&quot;&gt;iana-time-zone&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/iana-time-zone&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unsound
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-exposure.html&quot;&gt;memory-exposure&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/strawlab/iana-time-zone/pull/54&quot;&gt;
          https://github.com/strawlab/iana-time-zone/pull/54
        &lt;/a&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.1.45&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.1.43&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      
      &lt;dt&gt;Affected OSes&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;ios&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;macos&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;iana_time_zone::get_timezone&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;0.1.42, &amp;lt;0.1.45&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;In iana-time-zone v0.1.43 a use-after-free bug in the MacOS / iOS implementation was introduced.&lt;/p&gt;
&lt;p&gt;The copied system time zone was released before its name was copied.
If the system time zone was changed between the call of &lt;code&gt;CFRelease&lt;/code&gt; and &lt;code&gt;str::to_owned()&lt;/code&gt;,
random memory would be copied.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2022-0050: interledger-packet is unmaintained</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0050.html</id><updated>2022-08-04T00:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2022-0050.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0050: interledger-packet is unmaintained"/><published>2022-08-04T00:00:00+00:00</published><summary xml:lang="en">Interledger is Unmaintained</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/interledger-packet/RUSTSEC-2022-0050.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/interledger-packet/RUSTSEC-2022-0050.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0050
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Interledger is Unmaintained&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-08-04&quot;&gt;
          August  4, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/interledger-packet.html&quot;&gt;interledger-packet&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/interledger-packet&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unmaintained
        
      &lt;/dd&gt;

      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/interledger-rs/interledger-rs/issues/745&quot;&gt;
          https://github.com/interledger-rs/interledger-rs/issues/745
        &lt;/a&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;Interledger family of crates is not being actively maintained anymore.&lt;/p&gt;
&lt;p&gt;The owner of the published crate does not appear to be responsive.&lt;/p&gt;
&lt;p&gt;There is an outstanding concern around username comparison.&lt;/p&gt;
&lt;p&gt;This concern may or may not be resolved by bumping up the dependencies of the project.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2022-0035: Vulnerability in websocket</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0035.html</id><updated>2022-08-01T00:00:00+00:00</updated><category term="denial-of-service"/><link href="https://rustsec.org/advisories/RUSTSEC-2022-0035.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0035: Vulnerability in websocket"/><published>2022-08-01T00:00:00+00:00</published><summary xml:lang="en">Unbounded memory allocation based on untrusted length</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/websocket/RUSTSEC-2022-0035.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/websocket/RUSTSEC-2022-0035.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0035
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Unbounded memory allocation based on untrusted length&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-08-01&quot;&gt;
          August  1, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/websocket.html&quot;&gt;websocket&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/websocket&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/denial-of-service.html&quot;&gt;denial-of-service&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/websocket.html&quot;&gt;#websocket&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-35922&quot;&gt;CVE-2022-35922&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/websockets-rs/rust-websocket/security/advisories/GHSA-qrjv-rf5q-qpxc&quot;&gt;
          https://github.com/websockets-rs/rust-websocket/security/advisories/GHSA-qrjv-rf5q-qpxc
        &lt;/a&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.26.5&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;h2&gt;Impact&lt;/h2&gt;
&lt;p&gt;Untrusted websocket connections can cause an out-of-memory (OOM) process abort in a client or a server.
The root cause of the issue is during dataframe parsing.
Affected versions would allocate a buffer based on the declared dataframe size, which may come from an untrusted source.
When &lt;code&gt;Vec::with_capacity&lt;/code&gt; fails to allocate, the default Rust allocator will abort the current process, killing all threads. This affects only sync (non-Tokio) implementation. Async version also does not limit memory, but does not use &lt;code&gt;with_capacity&lt;/code&gt;, so DoS can happen only when bytes for oversized dataframe or message actually got delivered by the attacker.&lt;/p&gt;
&lt;p&gt;This is a security concern for you, if&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;your server application handles untrusted websocket connections&lt;/li&gt;
&lt;li&gt;OR your client application connects to untrusted websocket servers&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Patches&lt;/h2&gt;
&lt;p&gt;The crashes are fixed in version &lt;strong&gt;0.26.5&lt;/strong&gt; by imposing default dataframe size limits.
Affected users are advised to update to this version.&lt;/p&gt;
&lt;p&gt;Note that default memory limits are rather large (100MB dataframes and 200 MB messages), so they can still cause DoS in some environments (i.e. 32-bit). New API has been added to fine tune those limits for specific applications.&lt;/p&gt;
&lt;h3&gt;Workarounds&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Migrate your project to another, maintained Websocket library like Tungstenite.&lt;/li&gt;
&lt;li&gt;Accept only trusted WebSocket traffic.&lt;/li&gt;
&lt;li&gt;Filter the WebSocket traffic though some kind of proxy that ensures sanity limits on messages.&lt;/li&gt;
&lt;li&gt;Handle process aborts gracefully and limit process memory using OS tools.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Credits&lt;/h2&gt;
&lt;p&gt;This issue was reported by &lt;a href=&quot;https://github.com/evanrichter&quot;&gt;Evan Richter&lt;/a&gt; at ForAllSecure and found with &lt;a href=&quot;https://forallsecure.com/mayhem-for-code&quot;&gt;Mayhem&lt;/a&gt; and &lt;a href=&quot;https://github.com/rust-fuzz/cargo-fuzz&quot;&gt;Cargo Fuzz&lt;/a&gt;.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2022-0045: Vulnerability in oqs</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0045.html</id><updated>2022-07-30T00:00:00+00:00</updated><category term="crypto-failure"/><link href="https://rustsec.org/advisories/RUSTSEC-2022-0045.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0045: Vulnerability in oqs"/><published>2022-07-30T00:00:00+00:00</published><summary xml:lang="en">Post-Quantum Key Encapsulation Mechanism SIKE broken</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/oqs/RUSTSEC-2022-0045.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/oqs/RUSTSEC-2022-0045.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0045
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Post-Quantum Key Encapsulation Mechanism SIKE broken&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-07-30&quot;&gt;
          July 30, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/oqs.html&quot;&gt;oqs&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/oqs&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/crypto-failure.html&quot;&gt;crypto-failure&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      

      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.7.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;Wouter Castryck and Thomas Decru presented an efficient key recovery attack on the SIDH protocol.
As a result, the secret key of SIKEp751 can be recovered in a matter of hours.
The SIKE and SIDH schemes will be removed from oqs 0.7.2.&lt;/p&gt;
&lt;p&gt;The affected schemes are the &lt;code&gt;oqs::kem::Algorithm::Sike*&lt;/code&gt; and &lt;code&gt;oqs::kem::Algorithm::Sidh*&lt;/code&gt; enum variants.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://eprint.iacr.org/2022/975&quot;&gt;An efficient key recovery attack on SIDH (preliminary version)&lt;/a&gt;&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2022-0038: Vulnerability in juniper</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0038.html</id><updated>2022-07-28T00:00:00+00:00</updated><category term="denial-of-service"/><link href="https://rustsec.org/advisories/RUSTSEC-2022-0038.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0038: Vulnerability in juniper"/><published>2022-07-28T00:00:00+00:00</published><summary xml:lang="en">Denial of service on deeply nested fragment requests</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/juniper/RUSTSEC-2022-0038.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/juniper/RUSTSEC-2022-0038.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0038
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Denial of service on deeply nested fragment requests&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-07-28&quot;&gt;
          July 28, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/juniper.html&quot;&gt;juniper&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/juniper&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/denial-of-service.html&quot;&gt;denial-of-service&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-4rx6-g5vg-5f3j&quot;&gt;GHSA-4rx6-g5vg-5f3j&lt;/a&gt;
            
          &lt;/li&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-31173&quot;&gt;CVE-2022-31173&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/graphql-rust/juniper/security/advisories/GHSA-4rx6-g5vg-5f3j&quot;&gt;
          https://github.com/graphql-rust/juniper/security/advisories/GHSA-4rx6-g5vg-5f3j
        &lt;/a&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;related&quot;&gt;Related&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-xq3c-8gqm-v648&quot;&gt;GHSA-xq3c-8gqm-v648&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;cvss_score&quot;&gt;CVSS Score&lt;/dt&gt;
      &lt;dd&gt;7.5 &lt;span class=&quot;tag high&quot;&gt;
        HIGH
      &lt;/span&gt;&lt;/dd&gt;

      &lt;dt id=&quot;cvss_details&quot;&gt;CVSS Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;dl&gt;
          
          &lt;dt&gt;Attack vector&lt;/dt&gt;&lt;dd&gt;Network&lt;/dd&gt;
          

          
          &lt;dt&gt;Attack complexity&lt;/dt&gt;&lt;dd&gt;Low&lt;/d&gt;
          

          
          &lt;dt&gt;Privileges required&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;User interaction&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Scope&lt;/dt&gt;&lt;dd&gt;Unchanged&lt;/dd&gt;
          

          
          &lt;dt&gt;Confidentiality&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Integrity&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Availability&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          
        &lt;/dl&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;cvss&quot;&gt;CVSS Vector&lt;/dt&gt;
      &lt;dd&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H&quot;&gt;CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H&lt;/a&gt;&lt;/dd&gt;

      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.15.10&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;Deeply nested fragments in a GraphQL request may cause a stack overflow in the server.&lt;/p&gt;

  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2022-0034: Unsoundness in pkcs11</title><id>https://rustsec.org/advisories/RUSTSEC-2022-0034.html</id><updated>2022-07-22T00:00:00+00:00</updated><category term="code-execution"/><category term="memory-corruption"/><category term="crypto-failure"/><link href="https://rustsec.org/advisories/RUSTSEC-2022-0034.html" rel="alternate" type="text/html" title="RUSTSEC-2022-0034: Unsoundness in pkcs11"/><published>2022-07-22T00:00:00+00:00</published><summary xml:lang="en">Safety issues in `pkcs11`</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/pkcs11/RUSTSEC-2022-0034.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/pkcs11/RUSTSEC-2022-0034.md&quot;&gt;Edit&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2022-0034
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Safety issues in &lt;code&gt;pkcs11&lt;/code&gt;&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2022-07-22&quot;&gt;
          July 22, 2022
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/pkcs11.html&quot;&gt;pkcs11&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/pkcs11&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unsound
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/code-execution.html&quot;&gt;code-execution&lt;/a&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-corruption.html&quot;&gt;memory-corruption&lt;/a&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/crypto-failure.html&quot;&gt;crypto-failure&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/segfault.html&quot;&gt;#segfault&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/undefined-behaviour.html&quot;&gt;#undefined-behaviour&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;a href=&quot;https://github.com/mheese/rust-pkcs11/issues/57&quot;&gt;
          https://github.com/mheese/rust-pkcs11/issues/57
        &lt;/a&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;The interface of &lt;code&gt;pkcs11&lt;/code&gt; is subject to a number of safety issues, mainly related to handling of raw pointers. Despite presenting a safe interface, many of the functions and methods that rely on inputs which contain pointers (attributes and mechanisms in particular) can lead to segmentation faults and undefined behaviour when those pointers get dereferenced. For more details see the issues referenced below.&lt;/p&gt;
&lt;p&gt;Other problems that have been identified by the community include use-after-free (&lt;a href=&quot;https://github.com/mheese/rust-pkcs11/pull/53&quot;&gt;mheese/rust-pkcs11#53&lt;/a&gt;) and unsound uses of &lt;code&gt;transmute_copy&lt;/code&gt; (&lt;a href=&quot;https://github.com/mheese/rust-pkcs11/issues/55&quot;&gt;mheese/rust-pkcs11#55&lt;/a&gt;).&lt;/p&gt;
&lt;h3&gt;Workarounds&lt;/h3&gt;
&lt;p&gt;Users of the crate need to be &lt;em&gt;extremely&lt;/em&gt; careful in all the calls made to avoid segmentation faults and undefined behaviour due to use of stale pointers. Whenever a pointer is derived from a value and passed to the library, that value&apos;s lifetime must be guaranteed to outlast all calls that rely on the pointer. For example, users should &lt;strong&gt;avoid&lt;/strong&gt; creating or converting values within a separate scope (say, in a dedicated function), deriving a pointer, then extracting the pointer from that scope leaving the value to get dropped before passing the pointer to &lt;code&gt;pkcs11&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mheese/rust-pkcs11/issues/38&quot;&gt;mheese/rust-pkcs11#38&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mheese/rust-pkcs11/pull/53&quot;&gt;mheese/rust-pkcs11#53&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mheese/rust-pkcs11/issues/55&quot;&gt;mheese/rust-pkcs11#55&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mheese/rust-pkcs11/issues/54&quot;&gt;mheese/rust-pkcs11#54&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mheese/rust-pkcs11/issues/50&quot;&gt;mheese/rust-pkcs11#50&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/article&gt;</content></entry></feed>